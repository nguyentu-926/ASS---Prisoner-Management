/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JDialog.java to edit this template
 */
package view;

import java.io.BufferedWriter;
import java.io.FileWriter;
import java.io.IOException;
import java.util.Vector;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import mode.ThongTinPhamNhan;
import mode.ThongTinPhamNhanDAO;

/**
 *
 * @author ADMIN
 */
public class ThongtinDialog extends javax.swing.JDialog {

    static Object getInstance() {
        throw new UnsupportedOperationException("Not supported yet."); // Generated from nbfs://nbhost/SystemFileSystem/Templates/Classes/Code/GeneratedMethodBody
    }

    /**
     * Creates new form ThongtinDialog
     */
    private void addPredefinedPrisoners() {
    DefaultTableModel model = (DefaultTableModel) jTable1.getModel();

    // Information of predefined prisoners
    String[][] prisoners = {
        {"Nguyễn Tú", "29/09/2004", "Lạng Sơn", "PN0023", "Cướp ngân hàng", "2 tháng", "5 năm", "Việt Nam", "Nữ"},
        {"Tran Trang", "24/12/2004", "Ninh Bình", "PN0034", "Bán ma túy", "1 năm", "10 năm", "Việt  Nam", "Nữ"},
        {"Phạm Thái", "27/03/2000", "Nam Định", "PN0056", "Đánh nhau", "5 tháng", "6 tháng" ,"Việt Nam", "Nam"},
        {"Nguyễn Lan", "26/09/2003", "Đà Nẵng", "PN0067", "cướp", "4 tháng" ,"1 măm", "Việt Nam", "Nữ"},
        {"Đỗ Nam", "11/11/2001", "Hà Nội", "PN0069", "Gây rối trật tự", "1 tuần" ,"1 tháng", "Việt Nam", "Nam"},
        {"Vũ Hán", "02/09/2002", "Điện Biên", "PN0001", "Đốt pháo", "3 ngày" ,"15 ngày", "Việt Nam", "Nam"},
        {"Hà Hùng", "12/10/1999", "Lai Châu", "PN0081", "Cố ý gây thương tích", "3 tuần" ,"6 tháng", "Việt Nam", "Nam"},
        // Add more prisoners as needed
    };

    // Iterate over the list of predefined prisoners
    for (String[] prisonerData : prisoners) {
        // Add a new row to the table with the predefined prisoner's information
        model.addRow(prisonerData);
    }
}
    
    public ThongtinDialog(java.awt.Frame parent, boolean modal) {
        super(parent, modal);
        initComponents();
        addPredefinedPrisoners();


}


    // ... (existing code)
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        jLabel10 = new javax.swing.JLabel();
        jLabel11 = new javax.swing.JLabel();
        jLabel12 = new javax.swing.JLabel();
        jTextField1 = new javax.swing.JTextField();
        jTextField2 = new javax.swing.JTextField();
        jTextField3 = new javax.swing.JTextField();
        jTextField4 = new javax.swing.JTextField();
        jTextField5 = new javax.swing.JTextField();
        jTextField6 = new javax.swing.JTextField();
        jTextField7 = new javax.swing.JTextField();
        jTextField8 = new javax.swing.JTextField();
        jRadioButton1 = new javax.swing.JRadioButton();
        jRadioButton2 = new javax.swing.JRadioButton();
        jButton1 = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();
        jButton3 = new javax.swing.JButton();
        jButton4 = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        jLabel14 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();

        jLabel1.setText("jLabel1");

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel4.setText("Họ Và Tên :  ");
        getContentPane().add(jLabel4, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 20, -1, -1));

        jLabel6.setText("Quê quán:");
        getContentPane().add(jLabel6, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 80, -1, -1));

        jLabel5.setText("Id: ");
        getContentPane().add(jLabel5, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 110, -1, 20));

        jLabel7.setText("Ngày sinh :");
        getContentPane().add(jLabel7, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 50, -1, -1));

        jLabel8.setText("Giới tính : ");
        getContentPane().add(jLabel8, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 280, -1, -1));

        jLabel9.setText("Quốc tịch : ");
        getContentPane().add(jLabel9, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 240, -1, -1));

        jLabel10.setText("Tội danh : ");
        getContentPane().add(jLabel10, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 150, -1, -1));

        jLabel11.setText("Thời gian thụ án : ");
        getContentPane().add(jLabel11, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 180, -1, -1));

        jLabel12.setText("Thời hạn tù : ");
        getContentPane().add(jLabel12, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 210, -1, -1));

        jTextField1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextField1ActionPerformed(evt);
            }
        });
        getContentPane().add(jTextField1, new org.netbeans.lib.awtextra.AbsoluteConstraints(90, 20, 240, -1));
        getContentPane().add(jTextField2, new org.netbeans.lib.awtextra.AbsoluteConstraints(90, 50, 240, -1));
        getContentPane().add(jTextField3, new org.netbeans.lib.awtextra.AbsoluteConstraints(90, 80, 240, -1));
        getContentPane().add(jTextField4, new org.netbeans.lib.awtextra.AbsoluteConstraints(90, 110, 240, -1));

        jTextField5.setFont(new java.awt.Font("Segoe UI", 0, 10)); // NOI18N
        getContentPane().add(jTextField5, new org.netbeans.lib.awtextra.AbsoluteConstraints(90, 140, 240, 30));
        getContentPane().add(jTextField6, new org.netbeans.lib.awtextra.AbsoluteConstraints(110, 180, 220, -1));
        getContentPane().add(jTextField7, new org.netbeans.lib.awtextra.AbsoluteConstraints(90, 210, 240, -1));
        getContentPane().add(jTextField8, new org.netbeans.lib.awtextra.AbsoluteConstraints(90, 240, 240, -1));

        jRadioButton1.setText("Nam");
        getContentPane().add(jRadioButton1, new org.netbeans.lib.awtextra.AbsoluteConstraints(80, 280, -1, -1));

        jRadioButton2.setText("Nữ");
        jRadioButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jRadioButton2ActionPerformed(evt);
            }
        });
        getContentPane().add(jRadioButton2, new org.netbeans.lib.awtextra.AbsoluteConstraints(160, 280, -1, -1));

        jButton1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/icon12.png"))); // NOI18N
        jButton1.setText("lưu");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });
        getContentPane().add(jButton1, new org.netbeans.lib.awtextra.AbsoluteConstraints(100, 310, 80, 30));

        jButton2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/icon14.png"))); // NOI18N
        jButton2.setText("Xóa");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });
        getContentPane().add(jButton2, new org.netbeans.lib.awtextra.AbsoluteConstraints(180, 310, 100, 30));

        jButton3.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/icon13.png"))); // NOI18N
        jButton3.setText("Sửa");
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });
        getContentPane().add(jButton3, new org.netbeans.lib.awtextra.AbsoluteConstraints(280, 310, 80, 30));

        jButton4.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/icon11.png"))); // NOI18N
        jButton4.setText("Thêm");
        jButton4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton4ActionPerformed(evt);
            }
        });
        getContentPane().add(jButton4, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 310, 100, 30));

        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null}
            },
            new String [] {
                "Họ Và Tên", "Ngày sinh", "Quê quán", "Id", "Tội danh", "T/G thụ án", "Thời hạn tù", "Quốc Tịch", "Giới tính"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.Object.class, java.lang.Object.class, java.lang.Object.class, java.lang.Object.class, java.lang.Object.class, java.lang.Object.class, java.lang.Object.class, java.lang.Object.class
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }
        });
        jScrollPane1.setViewportView(jTable1);

        getContentPane().add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 360, 800, 260));

        jLabel14.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/ảnh phạm nhân.png"))); // NOI18N
        getContentPane().add(jLabel14, new org.netbeans.lib.awtextra.AbsoluteConstraints(340, -10, 460, 350));

        jLabel2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/icon9.png"))); // NOI18N
        jLabel2.setText("jLabel2");
        getContentPane().add(jLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(-20, -20, 820, 600));

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jRadioButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jRadioButton2ActionPerformed

    }//GEN-LAST:event_jRadioButton2ActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        // TODO add your handling code here:
    // Lưu thông tin phạm nhân vào cơ sở dữ liệu hoặc thực hiện các xử lý khác tùy vào yêu cầu
    // Trong ví dụ này, chúng ta chỉ in thông báo
    
    // Lấy thông tin phạm nhân từ các trường nhập liệu
    String hoTen = jTextField1.getText();
    String ngaySinh = jTextField2.getText();
    String queQuan = jTextField3.getText();
    String id = jTextField4.getText();
    String toiDanh = jTextField5.getText();
    String thoiGianThuAn = jTextField6.getText();
    String thoiHanTu = jTextField7.getText();
    String quocTich = jTextField8.getText();
    String gioiTinh = jRadioButton1.isSelected() ? "Nam" : "Nữ";

    // Kiểm tra xem có ô nhập liệu nào trống không
    if (hoTen.isEmpty() || ngaySinh.isEmpty() || queQuan.isEmpty() ||
        id.isEmpty() || toiDanh.isEmpty() || thoiGianThuAn.isEmpty() ||
        thoiHanTu.isEmpty() || quocTich.isEmpty() || (!jRadioButton1.isSelected() && !jRadioButton2.isSelected())) {
        // Hiển thị thông báo lỗi nếu có ô nhập liệu nào trống
        JOptionPane.showMessageDialog(this, "Vui lòng điền đầy đủ thông tin", "Lỗi", JOptionPane.ERROR_MESSAGE);
        return; // Thoát khỏi phương thức nếu có ô nhập liệu trống
    }

    // Hiển thị thông báo hoặc lưu vào cơ sở dữ liệu tùy thuộc vào yêu cầu
    // Trong ví dụ này, chúng ta chỉ in thông báo
    String message = "Thông tin phạm nhân đã được lưu:\n" +
            "Họ và Tên: " + hoTen + "\n" +
            "Ngày Sinh: " + ngaySinh + "\n" +
            "Quê Quán: " + queQuan + "\n" +
            "ID: " + id + "\n" +
            "Tội Danh: " + toiDanh + "\n" +
            "Thời Gian Thụ Án: " + thoiGianThuAn + "\n" +
            "Thời Hạn Tù: " + thoiHanTu + "\n" +
            "Quốc Tịch: " + quocTich + "\n" +
            "Giới Tính: " + gioiTinh;

    // Hiển thị thông báo
    JOptionPane.showMessageDialog(this, message, "Thông báo", JOptionPane.INFORMATION_MESSAGE);

    // Clear the input fields after processing
    clearInputFields();

    }//GEN-LAST:event_jButton1ActionPerformed

    private void jButton4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton4ActionPerformed
   DefaultTableModel model = (DefaultTableModel) jTable1.getModel();

    // Collect information about the new prisoner from text fields
    String hoTen = jTextField1.getText();
    String ngaySinh = jTextField2.getText();
    String queQuan = jTextField3.getText();
    String id = jTextField4.getText();
    String toiDanh = jTextField5.getText();
    String thoiGianThuAn = jTextField6.getText();
    String thoiHanTu = jTextField7.getText();
    String quocTich = jTextField8.getText();

    // Determine gender based on radio button selection
    String gioiTinh = jRadioButton1.isSelected() ? "Nam" : "Nữ";

    // Check if any of the input fields are empty
    if (hoTen.isEmpty() || ngaySinh.isEmpty() || queQuan.isEmpty() ||
        id.isEmpty() || toiDanh.isEmpty() || thoiGianThuAn.isEmpty() ||
        thoiHanTu.isEmpty() || quocTich.isEmpty() || (!jRadioButton1.isSelected() && !jRadioButton2.isSelected())) {
        // Display an error message dialog
        JOptionPane.showMessageDialog(this, "Vui lòng điền đầy đủ thông tin", "Lỗi", JOptionPane.ERROR_MESSAGE);
        return; // Exit the method if there are empty fields
    }

    // Create a Vector with the new prisoner's information
    Vector<Object> prisonerData = new Vector<>();
    prisonerData.add(hoTen);
    prisonerData.add(ngaySinh);
    prisonerData.add(queQuan);
    prisonerData.add(id);
    prisonerData.add(toiDanh);
    prisonerData.add(thoiGianThuAn);
    prisonerData.add(thoiHanTu);
    prisonerData.add(quocTich);
    prisonerData.add(gioiTinh);

    // Add a new row to the table with the prisoner's information
    model.addRow(prisonerData);

    // Save the updated data to the file
    saveDataToFile(model);

    // Clear the input fields after adding the new prisoner
    clearInputFields();
}

private void saveDataToFile(DefaultTableModel model) {
    try (BufferedWriter writer = new BufferedWriter(new FileWriter("prisoners_data.txt"))) {
        // Iterate over each row in the table model
        for (int i = 0; i < model.getRowCount(); i++) {
            // Iterate over each column in the row
            for (int j = 0; j < model.getColumnCount(); j++) {
                // Write the cell value followed by a tab character
                writer.write(model.getValueAt(i, j).toString());
                writer.write("\t");
            }
            // Write a newline character after each row
            writer.write("\n");
        }
    } catch (IOException e) {
        // Handle any errors that might occur during file writing
        e.printStackTrace();
    }


    }//GEN-LAST:event_jButton4ActionPerformed

    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed
   
    }//GEN-LAST:event_jButton3ActionPerformed
   private void saveEditedRow() {
    // Get the selected row index
    int selectedRowIndex = jTable1.getSelectedRow();

    // Check if a row is selected
    if (selectedRowIndex != -1) {
        // Update the data in the table with the modified values
        DefaultTableModel model = (DefaultTableModel) jTable1.getModel();
        model.setValueAt(jTextField1.getText(), selectedRowIndex, 0);
        model.setValueAt(jTextField2.getText(), selectedRowIndex, 1);
        model.setValueAt(jTextField3.getText(), selectedRowIndex, 2);
        model.setValueAt(jTextField4.getText(), selectedRowIndex, 3);
        model.setValueAt(jTextField5.getText(), selectedRowIndex, 4);
        model.setValueAt(jTextField6.getText(), selectedRowIndex, 5);
        model.setValueAt(jTextField7.getText(), selectedRowIndex, 6);
        model.setValueAt(jTextField8.getText(), selectedRowIndex, 7);

        // Set the selected gender based on the radio button
        if (jRadioButton1.isSelected()) {
            model.setValueAt("Nam", selectedRowIndex, 8);
        } else if (jRadioButton2.isSelected()) {
            model.setValueAt("Nữ", selectedRowIndex, 8);
        }

        // Optionally, you can reset visual feedback
        jTable1.setSelectionBackground(null);

        // Display a success message
        JOptionPane.showMessageDialog(this, "Đã lưu thay đổi thành công.", "Thành công", JOptionPane.INFORMATION_MESSAGE);

        // Enable the "Thêm" and "Xóa" buttons after saving changes
        jButton4.setEnabled(true);
        jButton2.setEnabled(true);

        // Disable the "Lưu" button
        jButton1.setEnabled(false);

        // Clear the input fields after saving changes
        clearInputFields();
    } else {
        // If no row is selected, display a message to inform the user
        JOptionPane.showMessageDialog(this, "Vui lòng chọn một dòng để sửa.", "Đã chọn hàng để sửa", JOptionPane.WARNING_MESSAGE);
    }
}
     // Method to update the table after editing a row


    private void jTextField1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextField1ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jTextField1ActionPerformed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        // TODO add your handling code here:
         // Xóa phạm nhân khi nút "Xóa" được nhấn
    DefaultTableModel model = (DefaultTableModel) jTable1.getModel();

    // Get the selected row index
    int selectedRowIndex = jTable1.getSelectedRow();

    // Check if a row is selected
    if (selectedRowIndex == -1) {
        JOptionPane.showMessageDialog(this, "Vui lòng chọn một dòng để xóa.", "Lỗi", JOptionPane.ERROR_MESSAGE);
        return;
    }

    // Ask for confirmation before deleting
    int dialogResult = JOptionPane.showConfirmDialog(this, "Bạn có chắc muốn xóa phạm nhân này?", "Xác nhận Xóa", JOptionPane.YES_NO_OPTION);
    if (dialogResult == JOptionPane.YES_OPTION) {
        // Remove the selected row from the table
        model.removeRow(selectedRowIndex);

        // Clear the input fields after deleting the prisoner
        clearInputFields();
    }

    }//GEN-LAST:event_jButton2ActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(ThongtinDialog.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(ThongtinDialog.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(ThongtinDialog.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(ThongtinDialog.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the dialog */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                ThongtinDialog dialog = new ThongtinDialog(new javax.swing.JFrame(), true);
                dialog.addWindowListener(new java.awt.event.WindowAdapter() {
                    @Override
                    public void windowClosing(java.awt.event.WindowEvent e) {
                        System.exit(0);
                    }
                });
                dialog.setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton3;
    private javax.swing.JButton jButton4;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JRadioButton jRadioButton1;
    private javax.swing.JRadioButton jRadioButton2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable jTable1;
    private javax.swing.JTextField jTextField1;
    private javax.swing.JTextField jTextField2;
    private javax.swing.JTextField jTextField3;
    private javax.swing.JTextField jTextField4;
    private javax.swing.JTextField jTextField5;
    private javax.swing.JTextField jTextField6;
    private javax.swing.JTextField jTextField7;
    private javax.swing.JTextField jTextField8;
    // End of variables declaration//GEN-END:variables

    private void updatePhamNhanInTable(int selectedRowIndex, ThongTinPhamNhan updatedPhamNhan) {
        throw new UnsupportedOperationException("Not supported yet."); // Generated from nbfs://nbhost/SystemFileSystem/Templates/Classes/Code/GeneratedMethodBody
    }

    private void initializeTable() {
        throw new UnsupportedOperationException("Not supported yet."); // Generated from nbfs://nbhost/SystemFileSystem/Templates/Classes/Code/GeneratedMethodBody
    }

    private boolean validateInput() {
        throw new UnsupportedOperationException("Not supported yet."); // Generated from nbfs://nbhost/SystemFileSystem/Templates/Classes/Code/GeneratedMethodBody
    }

    private void updateTable(int selectedRowIndex) {
        throw new UnsupportedOperationException("Not supported yet."); // Generated from nbfs://nbhost/SystemFileSystem/Templates/Classes/Code/GeneratedMethodBody
    }

    private void clearInputFields() {
        throw new UnsupportedOperationException("Not supported yet."); // Generated from nbfs://nbhost/SystemFileSystem/Templates/Classes/Code/GeneratedMethodBody
    }

}
